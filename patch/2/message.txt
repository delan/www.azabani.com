                                                                                                                                                                                                                                                               
Return-Path: <delan@azabani.com>
Received: from NeXTSTEP.local.com (edge.azabani.com. [59.167.111.68])
        by mx.google.com with ESMTPSA id c1sm12156515pdc.45.2015.05.31.14.56.35
        (version=TLSv1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Sun, 31 May 2015 14:56:37 -0700 (PDT)
From: Delan Azabani <delan@azabani.com>
To: nasm-devel@lists.sourceforge.net
Cc: Delan Azabani <delan@azabani.com>
Subject: [PATCH] Fix erroneously small write for OUT_REL4ADR
Date: Mon,  1 Jun 2015 05:56:11 +0800
Message-Id: <1433109371-7488-1-git-send-email-delan@azabani.com>
X-Mailer: git-send-email 2.3.2 (Apple Git-55)

Ensure that the int64_t offset value, which ultimately comes from an
int64_t value in gencode() (assemble.c:1906), is completely written to
the temporary buffer, instead of merely its least significant 32 bits.

Prior to this change, WRITELONG was used instead of WRITEDLONG, which
resulted in add_reloc being passed an int64_t "reloff" whose least
significant 32 bits were those from the aforementioned offset value,
and whose most significant 32 bits were stack garbage from "mydata".

This led to get_closest_section_symbol_by_offset() attempting to search
for extremely large values of "offset" among the symbols in "syms",
which meant that the last symbol with a matching section number would
always win the symbol search.

In effect, this clobbered the resultant relocation information, such
that all entries would be resolved with the same symbol.

Test output can be found here

https://www.azabani.com/patch/2/output.txt

This patch fixes

http://bugzilla.nasm.us/show_bug.cgi?id=3392306

Signed-off-by: Delan Azabani <delan@azabani.com>
---
 output/outmac64.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/output/outmac64.c b/output/outmac64.c
index 1d30e64..461fa32 100644
--- a/output/outmac64.c
+++ b/output/outmac64.c
@@ -588,7 +588,7 @@ static void macho_output(int32_t secto, const void *data,
 
     case OUT_REL4ADR:
         p = mydata;
-        WRITELONG(p, *(int64_t *)data + 4 - size);
+        WRITEDLONG(p, *(int64_t *)data + 4 - size);
 
         if (section == secto)
             nasm_error(ERR_PANIC, "intra-section OUT_REL4ADR");
-- 
2.3.2 (Apple Git-55)

